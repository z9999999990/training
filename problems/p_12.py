#!/usr/bin/env python
# coding = utf-8

"""

Highly Divisible Triangular Number

The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be
1 + 2 + 3 + 4 + 5 + 6 + 7 = 28.The first ten terms would be:
                                    1 , 3 , 6 , 10 , 15 , 21 , 28 , 36 , 45 , 55 , ... 
Let us list the factors of the first seven triangle numbers:
                                    1: 1
                                    3: 1 , 3
                                    6: 1 , 2 , 3 , 6
                                    10: 1 , 2 , 5 , 10
                                    15: 1 , 3 , 5 , 15
                                    21: 1 , 3 , 7 , 21
                                    28: 1 , 2 , 4 , 7 , 14 , 28
We can see that 8 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?

"""

PID = 12
ANSWER = ''


def couting(sum):
    num = 0
    i = 1
    while i * i <= sum:
        if sum % i == 0:
            num += 2
        i += 1

    return num



def solve() -> int :

    sum = 0
    next_num = 0
    i = 1
    a = True

    while a:
        next_num = next_num + i
        couting_num = couting(next_num)
        if couting_num >= 500:
            print(next_num, couting_num)
            a = False
        i += 1

